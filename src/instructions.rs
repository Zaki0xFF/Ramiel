use super::registers::*;
#[derive(Clone, Copy, Debug)]
pub enum Instruction {
    //u8 instructions
    ADC(Target),
    ADD(Target, Target),
    AND(Target, Target),
    CP(Target),
    SUB(Target),
    SBC(Target, Target),
    OR(Target, Target),
    XOR(Target, Target),
    INC(Target),
    DEC(Target),
    BIT(u8, Target),
    SET(u8, Target),
    SRL(Target),
    RR(Target),
    RL(Target),
    RRC(Target),
    RLC(Target),
    SRA(Target),
    SLA(Target),
    SWAP(Target),
    LD(Target, Target),
    LDI(Target, Target),
    LDD(Target, Target),
    LDH(LDHRegister, LDHRegister),
    LDHLSP(),
    //No target instructions
    CCF(),
    CPL(),
    DAA(),
    NOP(),
    STOP(),
    SCF(),
    RRA(),
    RLA(),
    RLCA(),
    RRCA(),
    RRLA(),
    DI(),
    EI(),

    //jump instructions
    JPHL(Target),
    JP(JumpCondition, u16),
    JR(JumpCondition),

    //stack instructions
    PUSH(Target),
    POP(Target),
    PUSHAF(),
    POPAF(),

    CALL(JumpCondition, u16),
    RET(JumpCondition),
    RETI(JumpCondition),
    HALT(),
    RES(u8, Target),
}

impl Instruction {
    pub fn from_prefixed_byte(byte: u8) -> Option<Instruction> {
        match byte {
            0x00 => Some(Instruction::RLC(Target::Register(ArithmeticTarget::B))),
            0x01 => Some(Instruction::RLC(Target::Register(ArithmeticTarget::C))),
            0x02 => Some(Instruction::RLC(Target::Register(ArithmeticTarget::D))),
            0x03 => Some(Instruction::RLC(Target::Register(ArithmeticTarget::E))),
            0x04 => Some(Instruction::RLC(Target::Register(ArithmeticTarget::H))),
            0x05 => Some(Instruction::RLC(Target::Register(ArithmeticTarget::L))),
            0x06 => Some(Instruction::RLC(Target::MemoryR16(DoubleTarget::HL))),
            0x07 => Some(Instruction::RLC(Target::Register(ArithmeticTarget::A))),
            0x08 => Some(Instruction::RRC(Target::Register(ArithmeticTarget::B))),
            0x09 => Some(Instruction::RRC(Target::Register(ArithmeticTarget::C))),
            0x0A => Some(Instruction::RRC(Target::Register(ArithmeticTarget::D))),
            0x0B => Some(Instruction::RRC(Target::Register(ArithmeticTarget::E))),
            0x0C => Some(Instruction::RRC(Target::Register(ArithmeticTarget::H))),
            0x0D => Some(Instruction::RRC(Target::Register(ArithmeticTarget::L))),
            0x0E => Some(Instruction::RRC(Target::MemoryR16(DoubleTarget::HL))),
            0x0F => Some(Instruction::RRC(Target::Register(ArithmeticTarget::A))),
            0x10 => Some(Instruction::RL(Target::Register(ArithmeticTarget::B))),
            0x11 => Some(Instruction::RL(Target::Register(ArithmeticTarget::C))),
            0x12 => Some(Instruction::RL(Target::Register(ArithmeticTarget::D))),
            0x13 => Some(Instruction::RL(Target::Register(ArithmeticTarget::E))),
            0x14 => Some(Instruction::RL(Target::Register(ArithmeticTarget::H))),
            0x15 => Some(Instruction::RL(Target::Register(ArithmeticTarget::L))),
            0x16 => Some(Instruction::RL(Target::MemoryR16(DoubleTarget::HL))),
            0x17 => Some(Instruction::RL(Target::Register(ArithmeticTarget::A))),
            0x18 => Some(Instruction::RR(Target::Register(ArithmeticTarget::B))),
            0x19 => Some(Instruction::RR(Target::Register(ArithmeticTarget::C))),
            0x1A => Some(Instruction::RR(Target::Register(ArithmeticTarget::D))),
            0x1B => Some(Instruction::RR(Target::Register(ArithmeticTarget::E))),
            0x1C => Some(Instruction::RR(Target::Register(ArithmeticTarget::H))),
            0x1D => Some(Instruction::RR(Target::Register(ArithmeticTarget::L))),
            0x1E => Some(Instruction::RR(Target::MemoryR16(DoubleTarget::HL))),
            0x1F => Some(Instruction::RR(Target::Register(ArithmeticTarget::A))),
            0x20 => Some(Instruction::SLA(Target::Register(ArithmeticTarget::B))),
            0x21 => Some(Instruction::SLA(Target::Register(ArithmeticTarget::C))),
            0x22 => Some(Instruction::SLA(Target::Register(ArithmeticTarget::D))),
            0x23 => Some(Instruction::SLA(Target::Register(ArithmeticTarget::E))),
            0x24 => Some(Instruction::SLA(Target::Register(ArithmeticTarget::H))),
            0x25 => Some(Instruction::SLA(Target::Register(ArithmeticTarget::L))),
            0x26 => Some(Instruction::SLA(Target::MemoryR16(DoubleTarget::HL))),
            0x27 => Some(Instruction::SLA(Target::Register(ArithmeticTarget::A))),
            0x28 => Some(Instruction::SRA(Target::Register(ArithmeticTarget::B))),
            0x29 => Some(Instruction::SRA(Target::Register(ArithmeticTarget::C))),
            0x2A => Some(Instruction::SRA(Target::Register(ArithmeticTarget::D))),
            0x2B => Some(Instruction::SRA(Target::Register(ArithmeticTarget::E))),
            0x2C => Some(Instruction::SRA(Target::Register(ArithmeticTarget::H))),
            0x2D => Some(Instruction::SRA(Target::Register(ArithmeticTarget::L))),
            0x2E => Some(Instruction::SRA(Target::MemoryR16(DoubleTarget::HL))),
            0x2F => Some(Instruction::SRA(Target::Register(ArithmeticTarget::A))),
            0x30 => Some(Instruction::SWAP(Target::Register(ArithmeticTarget::B))),
            0x31 => Some(Instruction::SWAP(Target::Register(ArithmeticTarget::C))),
            0x32 => Some(Instruction::SWAP(Target::Register(ArithmeticTarget::D))),
            0x33 => Some(Instruction::SWAP(Target::Register(ArithmeticTarget::E))),
            0x34 => Some(Instruction::SWAP(Target::Register(ArithmeticTarget::H))),
            0x35 => Some(Instruction::SWAP(Target::Register(ArithmeticTarget::L))),
            0x36 => Some(Instruction::SWAP(Target::MemoryR16(DoubleTarget::HL))),
            0x37 => Some(Instruction::SWAP(Target::Register(ArithmeticTarget::A))),
            0x38 => Some(Instruction::SRL(Target::Register(ArithmeticTarget::B))),
            0x39 => Some(Instruction::SRL(Target::Register(ArithmeticTarget::C))),
            0x3A => Some(Instruction::SRL(Target::Register(ArithmeticTarget::D))),
            0x3B => Some(Instruction::SRL(Target::Register(ArithmeticTarget::E))),
            0x3C => Some(Instruction::SRL(Target::Register(ArithmeticTarget::H))),
            0x3D => Some(Instruction::SRL(Target::Register(ArithmeticTarget::L))),
            0x3E => Some(Instruction::SRL(Target::MemoryR16(DoubleTarget::HL))),
            0x3F => Some(Instruction::SRL(Target::Register(ArithmeticTarget::A))),
            0x40 => Some(Instruction::BIT(0, Target::Register(ArithmeticTarget::B))),
            0x41 => Some(Instruction::BIT(0, Target::Register(ArithmeticTarget::C))),
            0x42 => Some(Instruction::BIT(0, Target::Register(ArithmeticTarget::D))),
            0x43 => Some(Instruction::BIT(0, Target::Register(ArithmeticTarget::E))),
            0x44 => Some(Instruction::BIT(0, Target::Register(ArithmeticTarget::H))),
            0x45 => Some(Instruction::BIT(0, Target::Register(ArithmeticTarget::L))),
            0x46 => Some(Instruction::BIT(0, Target::MemoryR16(DoubleTarget::HL))),
            0x47 => Some(Instruction::BIT(0, Target::Register(ArithmeticTarget::A))),
            0x48 => Some(Instruction::BIT(1, Target::Register(ArithmeticTarget::B))),
            0x49 => Some(Instruction::BIT(1, Target::Register(ArithmeticTarget::C))),
            0x4A => Some(Instruction::BIT(1, Target::Register(ArithmeticTarget::D))),
            0x4B => Some(Instruction::BIT(1, Target::Register(ArithmeticTarget::E))),
            0x4C => Some(Instruction::BIT(1, Target::Register(ArithmeticTarget::H))),
            0x4D => Some(Instruction::BIT(1, Target::Register(ArithmeticTarget::L))),
            0x4E => Some(Instruction::BIT(1, Target::MemoryR16(DoubleTarget::HL))),
            0x4F => Some(Instruction::BIT(1, Target::Register(ArithmeticTarget::A))),
            0x50 => Some(Instruction::BIT(2, Target::Register(ArithmeticTarget::B))),
            0x51 => Some(Instruction::BIT(2, Target::Register(ArithmeticTarget::C))),
            0x52 => Some(Instruction::BIT(2, Target::Register(ArithmeticTarget::D))),
            0x53 => Some(Instruction::BIT(2, Target::Register(ArithmeticTarget::E))),
            0x54 => Some(Instruction::BIT(2, Target::Register(ArithmeticTarget::H))),
            0x55 => Some(Instruction::BIT(2, Target::Register(ArithmeticTarget::L))),
            0x56 => Some(Instruction::BIT(2, Target::MemoryR16(DoubleTarget::HL))),
            0x57 => Some(Instruction::BIT(2, Target::Register(ArithmeticTarget::A))),
            0x58 => Some(Instruction::BIT(3, Target::Register(ArithmeticTarget::B))),
            0x59 => Some(Instruction::BIT(3, Target::Register(ArithmeticTarget::C))),
            0x5A => Some(Instruction::BIT(3, Target::Register(ArithmeticTarget::D))),
            0x5B => Some(Instruction::BIT(3, Target::Register(ArithmeticTarget::E))),
            0x5C => Some(Instruction::BIT(3, Target::Register(ArithmeticTarget::H))),
            0x5D => Some(Instruction::BIT(3, Target::Register(ArithmeticTarget::L))),
            0x5E => Some(Instruction::BIT(3, Target::MemoryR16(DoubleTarget::HL))),
            0x5F => Some(Instruction::BIT(3, Target::Register(ArithmeticTarget::A))),
            0x60 => Some(Instruction::BIT(4, Target::Register(ArithmeticTarget::B))),
            0x61 => Some(Instruction::BIT(4, Target::Register(ArithmeticTarget::C))),
            0x62 => Some(Instruction::BIT(4, Target::Register(ArithmeticTarget::D))),
            0x63 => Some(Instruction::BIT(4, Target::Register(ArithmeticTarget::E))),
            0x64 => Some(Instruction::BIT(4, Target::Register(ArithmeticTarget::H))),
            0x65 => Some(Instruction::BIT(4, Target::Register(ArithmeticTarget::L))),
            0x66 => Some(Instruction::BIT(4, Target::MemoryR16(DoubleTarget::HL))),
            0x67 => Some(Instruction::BIT(4, Target::Register(ArithmeticTarget::A))),
            0x68 => Some(Instruction::BIT(5, Target::Register(ArithmeticTarget::B))),
            0x69 => Some(Instruction::BIT(5, Target::Register(ArithmeticTarget::C))),
            0x6A => Some(Instruction::BIT(5, Target::Register(ArithmeticTarget::D))),
            0x6B => Some(Instruction::BIT(5, Target::Register(ArithmeticTarget::E))),
            0x6C => Some(Instruction::BIT(5, Target::Register(ArithmeticTarget::H))),
            0x6D => Some(Instruction::BIT(5, Target::Register(ArithmeticTarget::L))),
            0x6E => Some(Instruction::BIT(5, Target::MemoryR16(DoubleTarget::HL))),
            0x6F => Some(Instruction::BIT(5, Target::Register(ArithmeticTarget::A))),
            0x70 => Some(Instruction::BIT(6, Target::Register(ArithmeticTarget::B))),
            0x71 => Some(Instruction::BIT(6, Target::Register(ArithmeticTarget::C))),
            0x72 => Some(Instruction::BIT(6, Target::Register(ArithmeticTarget::D))),
            0x73 => Some(Instruction::BIT(6, Target::Register(ArithmeticTarget::E))),
            0x74 => Some(Instruction::BIT(6, Target::Register(ArithmeticTarget::H))),
            0x75 => Some(Instruction::BIT(6, Target::Register(ArithmeticTarget::L))),
            0x76 => Some(Instruction::BIT(6, Target::MemoryR16(DoubleTarget::HL))),
            0x77 => Some(Instruction::BIT(6, Target::Register(ArithmeticTarget::A))),
            0x78 => Some(Instruction::BIT(7, Target::Register(ArithmeticTarget::B))),
            0x79 => Some(Instruction::BIT(7, Target::Register(ArithmeticTarget::C))),
            0x7A => Some(Instruction::BIT(7, Target::Register(ArithmeticTarget::D))),
            0x7B => Some(Instruction::BIT(7, Target::Register(ArithmeticTarget::E))),
            0x7C => Some(Instruction::BIT(7, Target::Register(ArithmeticTarget::H))),
            0x7D => Some(Instruction::BIT(7, Target::Register(ArithmeticTarget::L))),
            0x7E => Some(Instruction::BIT(7, Target::MemoryR16(DoubleTarget::HL))),
            0x7F => Some(Instruction::BIT(7, Target::Register(ArithmeticTarget::A))),
            0x80 => Some(Instruction::RES(0, Target::Register(ArithmeticTarget::B))),
            0x81 => Some(Instruction::RES(0, Target::Register(ArithmeticTarget::C))),
            0x82 => Some(Instruction::RES(0, Target::Register(ArithmeticTarget::D))),
            0x83 => Some(Instruction::RES(0, Target::Register(ArithmeticTarget::E))),
            0x84 => Some(Instruction::RES(0, Target::Register(ArithmeticTarget::H))),
            0x85 => Some(Instruction::RES(0, Target::Register(ArithmeticTarget::L))),
            0x86 => Some(Instruction::RES(0, Target::MemoryR16(DoubleTarget::HL))),
            0x87 => Some(Instruction::RES(0, Target::Register(ArithmeticTarget::A))),
            0x88 => Some(Instruction::RES(1, Target::Register(ArithmeticTarget::B))),
            0x89 => Some(Instruction::RES(1, Target::Register(ArithmeticTarget::C))),
            0x8A => Some(Instruction::RES(1, Target::Register(ArithmeticTarget::D))),
            0x8B => Some(Instruction::RES(1, Target::Register(ArithmeticTarget::E))),
            0x8C => Some(Instruction::RES(1, Target::Register(ArithmeticTarget::H))),
            0x8D => Some(Instruction::RES(1, Target::Register(ArithmeticTarget::L))),
            0x8E => Some(Instruction::RES(1, Target::MemoryR16(DoubleTarget::HL))),
            0x8F => Some(Instruction::RES(1, Target::Register(ArithmeticTarget::A))),
            0x90 => Some(Instruction::RES(2, Target::Register(ArithmeticTarget::B))),
            0x91 => Some(Instruction::RES(2, Target::Register(ArithmeticTarget::C))),
            0x92 => Some(Instruction::RES(2, Target::Register(ArithmeticTarget::D))),
            0x93 => Some(Instruction::RES(2, Target::Register(ArithmeticTarget::E))),
            0x94 => Some(Instruction::RES(2, Target::Register(ArithmeticTarget::H))),
            0x95 => Some(Instruction::RES(2, Target::Register(ArithmeticTarget::L))),
            0x96 => Some(Instruction::RES(2, Target::MemoryR16(DoubleTarget::HL))),
            0x97 => Some(Instruction::RES(2, Target::Register(ArithmeticTarget::A))),
            0x98 => Some(Instruction::RES(3, Target::Register(ArithmeticTarget::B))),
            0x99 => Some(Instruction::RES(3, Target::Register(ArithmeticTarget::C))),
            0x9A => Some(Instruction::RES(3, Target::Register(ArithmeticTarget::D))),
            0x9B => Some(Instruction::RES(3, Target::Register(ArithmeticTarget::E))),
            0x9C => Some(Instruction::RES(3, Target::Register(ArithmeticTarget::H))),
            0x9D => Some(Instruction::RES(3, Target::Register(ArithmeticTarget::L))),
            0x9E => Some(Instruction::RES(3, Target::MemoryR16(DoubleTarget::HL))),
            0x9F => Some(Instruction::RES(3, Target::Register(ArithmeticTarget::A))),
            0xA0 => Some(Instruction::RES(4, Target::Register(ArithmeticTarget::B))),
            0xA1 => Some(Instruction::RES(4, Target::Register(ArithmeticTarget::C))),
            0xA2 => Some(Instruction::RES(4, Target::Register(ArithmeticTarget::D))),
            0xA3 => Some(Instruction::RES(4, Target::Register(ArithmeticTarget::E))),
            0xA4 => Some(Instruction::RES(4, Target::Register(ArithmeticTarget::H))),
            0xA5 => Some(Instruction::RES(4, Target::Register(ArithmeticTarget::L))),
            0xA6 => Some(Instruction::RES(4, Target::MemoryR16(DoubleTarget::HL))),
            0xA7 => Some(Instruction::RES(4, Target::Register(ArithmeticTarget::A))),
            0xA8 => Some(Instruction::RES(5, Target::Register(ArithmeticTarget::B))),
            0xA9 => Some(Instruction::RES(5, Target::Register(ArithmeticTarget::C))),
            0xAA => Some(Instruction::RES(5, Target::Register(ArithmeticTarget::D))),
            0xAB => Some(Instruction::RES(5, Target::Register(ArithmeticTarget::E))),
            0xAC => Some(Instruction::RES(5, Target::Register(ArithmeticTarget::H))),
            0xAD => Some(Instruction::RES(5, Target::Register(ArithmeticTarget::L))),
            0xAE => Some(Instruction::RES(5, Target::MemoryR16(DoubleTarget::HL))),
            0xAF => Some(Instruction::RES(5, Target::Register(ArithmeticTarget::A))),
            0xB0 => Some(Instruction::RES(6, Target::Register(ArithmeticTarget::B))),
            0xB1 => Some(Instruction::RES(6, Target::Register(ArithmeticTarget::C))),
            0xB2 => Some(Instruction::RES(6, Target::Register(ArithmeticTarget::D))),
            0xB3 => Some(Instruction::RES(6, Target::Register(ArithmeticTarget::E))),
            0xB4 => Some(Instruction::RES(6, Target::Register(ArithmeticTarget::H))),
            0xB5 => Some(Instruction::RES(6, Target::Register(ArithmeticTarget::L))),
            0xB6 => Some(Instruction::RES(6, Target::MemoryR16(DoubleTarget::HL))),
            0xB7 => Some(Instruction::RES(6, Target::Register(ArithmeticTarget::A))),
            0xB8 => Some(Instruction::RES(7, Target::Register(ArithmeticTarget::B))),
            0xB9 => Some(Instruction::RES(7, Target::Register(ArithmeticTarget::C))),
            0xBA => Some(Instruction::RES(7, Target::Register(ArithmeticTarget::D))),
            0xBB => Some(Instruction::RES(7, Target::Register(ArithmeticTarget::E))),
            0xBC => Some(Instruction::RES(7, Target::Register(ArithmeticTarget::H))),
            0xBD => Some(Instruction::RES(7, Target::Register(ArithmeticTarget::L))),
            0xBE => Some(Instruction::RES(7, Target::MemoryR16(DoubleTarget::HL))),
            0xBF => Some(Instruction::RES(7, Target::Register(ArithmeticTarget::A))),
            0xC0 => Some(Instruction::SET(0, Target::Register(ArithmeticTarget::B))),
            0xC1 => Some(Instruction::SET(0, Target::Register(ArithmeticTarget::C))),
            0xC2 => Some(Instruction::SET(0, Target::Register(ArithmeticTarget::D))),
            0xC3 => Some(Instruction::SET(0, Target::Register(ArithmeticTarget::E))),
            0xC4 => Some(Instruction::SET(0, Target::Register(ArithmeticTarget::H))),
            0xC5 => Some(Instruction::SET(0, Target::Register(ArithmeticTarget::L))),
            0xC6 => Some(Instruction::SET(0, Target::MemoryR16(DoubleTarget::HL))),
            0xC7 => Some(Instruction::SET(0, Target::Register(ArithmeticTarget::A))),
            0xC8 => Some(Instruction::SET(1, Target::Register(ArithmeticTarget::B))),
            0xC9 => Some(Instruction::SET(1, Target::Register(ArithmeticTarget::C))),
            0xCA => Some(Instruction::SET(1, Target::Register(ArithmeticTarget::D))),
            0xCB => Some(Instruction::SET(1, Target::Register(ArithmeticTarget::E))),
            0xCC => Some(Instruction::SET(1, Target::Register(ArithmeticTarget::H))),
            0xCD => Some(Instruction::SET(1, Target::Register(ArithmeticTarget::L))),
            0xCE => Some(Instruction::SET(1, Target::MemoryR16(DoubleTarget::HL))),
            0xCF => Some(Instruction::SET(1, Target::Register(ArithmeticTarget::A))),
            0xD0 => Some(Instruction::SET(2, Target::Register(ArithmeticTarget::B))),
            0xD1 => Some(Instruction::SET(2, Target::Register(ArithmeticTarget::C))),
            0xD2 => Some(Instruction::SET(2, Target::Register(ArithmeticTarget::D))),
            0xD3 => Some(Instruction::SET(2, Target::Register(ArithmeticTarget::E))),
            0xD4 => Some(Instruction::SET(2, Target::Register(ArithmeticTarget::H))),
            0xD5 => Some(Instruction::SET(2, Target::Register(ArithmeticTarget::L))),
            0xD6 => Some(Instruction::SET(2, Target::MemoryR16(DoubleTarget::HL))),
            0xD7 => Some(Instruction::SET(2, Target::Register(ArithmeticTarget::A))),
            0xD8 => Some(Instruction::SET(3, Target::Register(ArithmeticTarget::B))),
            0xD9 => Some(Instruction::SET(3, Target::Register(ArithmeticTarget::C))),
            0xDA => Some(Instruction::SET(3, Target::Register(ArithmeticTarget::D))),
            0xDB => Some(Instruction::SET(3, Target::Register(ArithmeticTarget::E))),
            0xDC => Some(Instruction::SET(3, Target::Register(ArithmeticTarget::H))),
            0xDD => Some(Instruction::SET(3, Target::Register(ArithmeticTarget::L))),
            0xDE => Some(Instruction::SET(3, Target::MemoryR16(DoubleTarget::HL))),
            0xDF => Some(Instruction::SET(3, Target::Register(ArithmeticTarget::A))),
            0xE0 => Some(Instruction::SET(4, Target::Register(ArithmeticTarget::B))),
            0xE1 => Some(Instruction::SET(4, Target::Register(ArithmeticTarget::C))),
            0xE2 => Some(Instruction::SET(4, Target::Register(ArithmeticTarget::D))),
            0xE3 => Some(Instruction::SET(4, Target::Register(ArithmeticTarget::E))),
            0xE4 => Some(Instruction::SET(4, Target::Register(ArithmeticTarget::H))),
            0xE5 => Some(Instruction::SET(4, Target::Register(ArithmeticTarget::L))),
            0xE6 => Some(Instruction::SET(4, Target::MemoryR16(DoubleTarget::HL))),
            0xE7 => Some(Instruction::SET(4, Target::Register(ArithmeticTarget::A))),
            0xE8 => Some(Instruction::SET(5, Target::Register(ArithmeticTarget::B))),
            0xE9 => Some(Instruction::SET(5, Target::Register(ArithmeticTarget::C))),
            0xEA => Some(Instruction::SET(5, Target::Register(ArithmeticTarget::D))),
            0xEB => Some(Instruction::SET(5, Target::Register(ArithmeticTarget::E))),
            0xEC => Some(Instruction::SET(5, Target::Register(ArithmeticTarget::H))),
            0xED => Some(Instruction::SET(5, Target::Register(ArithmeticTarget::L))),
            0xEE => Some(Instruction::SET(5, Target::MemoryR16(DoubleTarget::HL))),
            0xEF => Some(Instruction::SET(5, Target::Register(ArithmeticTarget::A))),
            0xF0 => Some(Instruction::SET(6, Target::Register(ArithmeticTarget::B))),
            0xF1 => Some(Instruction::SET(6, Target::Register(ArithmeticTarget::C))),
            0xF2 => Some(Instruction::SET(6, Target::Register(ArithmeticTarget::D))),
            0xF3 => Some(Instruction::SET(6, Target::Register(ArithmeticTarget::E))),
            0xF4 => Some(Instruction::SET(6, Target::Register(ArithmeticTarget::H))),
            0xF5 => Some(Instruction::SET(6, Target::Register(ArithmeticTarget::L))),
            0xF6 => Some(Instruction::SET(6, Target::MemoryR16(DoubleTarget::HL))),
            0xF7 => Some(Instruction::SET(6, Target::Register(ArithmeticTarget::A))),
            0xF8 => Some(Instruction::SET(7, Target::Register(ArithmeticTarget::B))),
            0xF9 => Some(Instruction::SET(7, Target::Register(ArithmeticTarget::C))),
            0xFA => Some(Instruction::SET(7, Target::Register(ArithmeticTarget::D))),
            0xFB => Some(Instruction::SET(7, Target::Register(ArithmeticTarget::E))),
            0xFC => Some(Instruction::SET(7, Target::Register(ArithmeticTarget::H))),
            0xFD => Some(Instruction::SET(7, Target::Register(ArithmeticTarget::L))),
            0xFE => Some(Instruction::SET(7, Target::MemoryR16(DoubleTarget::HL))),
            0xFF => Some(Instruction::SET(7, Target::Register(ArithmeticTarget::A))),
        }
    }

    pub fn match_byte(byte: u8) -> Option<Instruction> {
        match byte {
            0x00 => Some(Instruction::NOP()),
            0x01 => Some(Instruction::LD(
                Target::Register16(DoubleTarget::BC),
                Target::Const16(),
            )),
            0x02 => Some(Instruction::LD(
                Target::Register16(DoubleTarget::BC),
                Target::Register(ArithmeticTarget::A),
            )),
            0x03 => Some(Instruction::INC(Target::Register16(DoubleTarget::BC))),
            0x04 => Some(Instruction::INC(Target::Register(ArithmeticTarget::B))),
            0x05 => Some(Instruction::DEC(Target::Register(ArithmeticTarget::B))),
            0x06 => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::B),
                Target::Const8(),
            )),
            0x07 => Some(Instruction::RLC(Target::Register(ArithmeticTarget::A))),
            0x08 => Some(Instruction::LD(
                Target::MemoryConst16(),
                Target::Register16(DoubleTarget::SP),
            )),
            0x09 => Some(Instruction::ADD(
                Target::Register16(DoubleTarget::HL),
                Target::Register16(DoubleTarget::BC),
            )),
            0x0A => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::A),
                Target::MemoryR16(DoubleTarget::BC),
            )),
            0x0B => Some(Instruction::DEC(Target::Register16(DoubleTarget::BC))),
            0x0C => Some(Instruction::INC(Target::Register(ArithmeticTarget::C))),
            0x0D => Some(Instruction::DEC(Target::Register(ArithmeticTarget::C))),
            0x0E => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::C),
                Target::Const8(),
            )),
            0x0F => Some(Instruction::RRC(Target::Register(ArithmeticTarget::A))),

            0x10 => Some(Instruction::STOP()),
            0x11 => Some(Instruction::LD(
                Target::Register16(DoubleTarget::DE),
                Target::Const16(),
            )),
            0x12 => Some(Instruction::LD(
                Target::MemoryR16(DoubleTarget::DE),
                Target::Register(ArithmeticTarget::A),
            )),
            0x13 => Some(Instruction::INC(Target::Register16(DoubleTarget::DE))),
            0x14 => Some(Instruction::INC(Target::Register(ArithmeticTarget::D))),
            0x15 => Some(Instruction::DEC(Target::Register(ArithmeticTarget::D))),
            0x16 => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::D),
                Target::Const8(),
            )),
            0x17 => Some(Instruction::RL(Target::Register(ArithmeticTarget::A))),
            0x18 => Some(Instruction::JR(JumpCondition::Always)),
            0x19 => Some(Instruction::ADD(
                Target::Register16(DoubleTarget::HL),
                Target::Register16(DoubleTarget::DE),
            )),
            0x1A => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::A),
                Target::MemoryR16(DoubleTarget::DE),
            )),
            0x1B => Some(Instruction::DEC(Target::Register16(DoubleTarget::DE))),
            0x1C => Some(Instruction::INC(Target::Register(ArithmeticTarget::E))),
            0x1D => Some(Instruction::DEC(Target::Register(ArithmeticTarget::E))),
            0x1E => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::E),
                Target::Const8(),
            )),
            0x1F => Some(Instruction::RR(Target::Register(ArithmeticTarget::A))),

            0x20 => Some(Instruction::JR(JumpCondition::NotZero)),
            0x21 => Some(Instruction::LD(
                Target::Register16(DoubleTarget::HL),
                Target::Const16(),
            )),
            0x22 => Some(Instruction::LDI(
                Target::Register16(DoubleTarget::HL),
                Target::Register(ArithmeticTarget::A),
            )),
            0x23 => Some(Instruction::INC(Target::Register16(DoubleTarget::HL))),
            0x24 => Some(Instruction::INC(Target::Register(ArithmeticTarget::H))),
            0x25 => Some(Instruction::DEC(Target::Register(ArithmeticTarget::H))),
            0x26 => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::H),
                Target::Const8(),
            )),
            0x27 => Some(Instruction::DAA()),
            0x28 => Some(Instruction::JR(JumpCondition::Zero)),
            0x29 => Some(Instruction::ADD(
                Target::Register16(DoubleTarget::HL),
                Target::Register16(DoubleTarget::HL),
            )),
            0x2A => Some(Instruction::LDI(
                Target::Register(ArithmeticTarget::A),
                Target::Register16(DoubleTarget::HL),
            )),
            0x2B => Some(Instruction::DEC(Target::Register16(DoubleTarget::HL))),
            0x2C => Some(Instruction::INC(Target::Register(ArithmeticTarget::L))),
            0x2D => Some(Instruction::DEC(Target::Register(ArithmeticTarget::L))),
            0x2E => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::L),
                Target::Const8(),
            )),
            0x2F => Some(Instruction::CPL()),
            0x30 => Some(Instruction::JR(JumpCondition::NotCarry)),
            0x31 => Some(Instruction::LD(
                Target::Register16(DoubleTarget::SP),
                Target::Const16(),
            )),
            0x32 => Some(Instruction::LDD(
                Target::MemoryR16(DoubleTarget::HL),
                Target::Register(ArithmeticTarget::A),
            )),
            0x33 => Some(Instruction::INC(Target::Register16(DoubleTarget::SP))),
            0x34 => Some(Instruction::INC(Target::MemoryR16(DoubleTarget::HL))),
            0x35 => Some(Instruction::DEC(Target::MemoryR16(DoubleTarget::HL))),
            0x36 => Some(Instruction::LD(
                Target::MemoryR16(DoubleTarget::HL),
                Target::Const8(),
            )),
            0x37 => Some(Instruction::SCF()),
            0x38 => Some(Instruction::JR(JumpCondition::Carry)),
            0x39 => Some(Instruction::ADD(
                Target::Register16(DoubleTarget::HL),
                Target::Register16(DoubleTarget::SP),
            )),
            0x3A => Some(Instruction::LDD(
                Target::Register(ArithmeticTarget::A),
                Target::MemoryR16(DoubleTarget::HL),
            )),
            0x3B => Some(Instruction::DEC(Target::Register16(DoubleTarget::SP))),
            0x3C => Some(Instruction::INC(Target::Register(ArithmeticTarget::A))),
            0x3D => Some(Instruction::DEC(Target::Register(ArithmeticTarget::A))),
            0x3E => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::A),
                Target::Const8(),
            )),
            0x3F => Some(Instruction::CCF()),
            0x40 => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::B),
                Target::Register(ArithmeticTarget::B),
            )),
            0x41 => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::B),
                Target::Register(ArithmeticTarget::C),
            )),
            0x42 => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::B),
                Target::Register(ArithmeticTarget::D),
            )),
            0x43 => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::B),
                Target::Register(ArithmeticTarget::E),
            )),
            0x44 => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::B),
                Target::Register(ArithmeticTarget::H),
            )),
            0x45 => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::B),
                Target::Register(ArithmeticTarget::L),
            )),
            0x46 => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::B),
                Target::MemoryR16(DoubleTarget::HL),
            )),
            0x47 => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::B),
                Target::Register(ArithmeticTarget::A),
            )),
            0x48 => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::C),
                Target::Register(ArithmeticTarget::B),
            )),
            0x49 => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::C),
                Target::Register(ArithmeticTarget::C),
            )),
            0x4A => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::C),
                Target::Register(ArithmeticTarget::D),
            )),
            0x4B => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::C),
                Target::Register(ArithmeticTarget::E),
            )),
            0x4C => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::C),
                Target::Register(ArithmeticTarget::H),
            )),
            0x4D => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::C),
                Target::Register(ArithmeticTarget::L),
            )),
            0x4E => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::C),
                Target::MemoryR16(DoubleTarget::HL),
            )),
            0x4F => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::C),
                Target::Register(ArithmeticTarget::A),
            )),
            0x50 => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::D),
                Target::Register(ArithmeticTarget::B),
            )),
            0x51 => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::D),
                Target::Register(ArithmeticTarget::C),
            )),
            0x52 => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::D),
                Target::Register(ArithmeticTarget::D),
            )),
            0x53 => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::D),
                Target::Register(ArithmeticTarget::E),
            )),
            0x54 => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::D),
                Target::Register(ArithmeticTarget::H),
            )),
            0x55 => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::D),
                Target::Register(ArithmeticTarget::L),
            )),
            0x56 => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::D),
                Target::MemoryR16(DoubleTarget::HL),
            )),
            0x57 => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::D),
                Target::Register(ArithmeticTarget::A),
            )),
            0x58 => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::E),
                Target::Register(ArithmeticTarget::B),
            )),
            0x59 => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::E),
                Target::Register(ArithmeticTarget::C),
            )),
            0x5A => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::E),
                Target::Register(ArithmeticTarget::D),
            )),
            0x5B => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::E),
                Target::Register(ArithmeticTarget::E),
            )),
            0x5C => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::E),
                Target::Register(ArithmeticTarget::H),
            )),
            0x5D => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::E),
                Target::Register(ArithmeticTarget::L),
            )),
            0x5E => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::E),
                Target::MemoryR16(DoubleTarget::HL),
            )),
            0x5F => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::E),
                Target::Register(ArithmeticTarget::A),
            )),
            0x60 => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::H),
                Target::Register(ArithmeticTarget::B),
            )),
            0x61 => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::H),
                Target::Register(ArithmeticTarget::C),
            )),
            0x62 => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::H),
                Target::Register(ArithmeticTarget::D),
            )),
            0x63 => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::H),
                Target::Register(ArithmeticTarget::E),
            )),
            0x64 => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::H),
                Target::Register(ArithmeticTarget::H),
            )),
            0x65 => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::H),
                Target::Register(ArithmeticTarget::L),
            )),
            0x66 => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::H),
                Target::MemoryR16(DoubleTarget::HL),
            )),
            0x67 => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::H),
                Target::Register(ArithmeticTarget::A),
            )),
            0x68 => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::L),
                Target::Register(ArithmeticTarget::B),
            )),
            0x69 => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::L),
                Target::Register(ArithmeticTarget::C),
            )),
            0x6A => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::L),
                Target::Register(ArithmeticTarget::D),
            )),
            0x6B => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::L),
                Target::Register(ArithmeticTarget::E),
            )),
            0x6C => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::L),
                Target::Register(ArithmeticTarget::H),
            )),
            0x6D => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::L),
                Target::Register(ArithmeticTarget::L),
            )),
            0x6E => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::L),
                Target::MemoryR16(DoubleTarget::HL),
            )),
            0x6F => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::L),
                Target::Register(ArithmeticTarget::A),
            )),
            0x70 => Some(Instruction::LD(
                Target::MemoryR16(DoubleTarget::HL),
                Target::Register(ArithmeticTarget::B),
            )),
            0x71 => Some(Instruction::LD(
                Target::MemoryR16(DoubleTarget::HL),
                Target::Register(ArithmeticTarget::C),
            )),
            0x72 => Some(Instruction::LD(
                Target::MemoryR16(DoubleTarget::HL),
                Target::Register(ArithmeticTarget::D),
            )),
            0x73 => Some(Instruction::LD(
                Target::MemoryR16(DoubleTarget::HL),
                Target::Register(ArithmeticTarget::E),
            )),
            0x74 => Some(Instruction::LD(
                Target::MemoryR16(DoubleTarget::HL),
                Target::Register(ArithmeticTarget::H),
            )),
            0x75 => Some(Instruction::LD(
                Target::MemoryR16(DoubleTarget::HL),
                Target::Register(ArithmeticTarget::L),
            )),
            0x76 => Some(Instruction::HALT()),
            0x77 => Some(Instruction::LD(
                Target::MemoryR16(DoubleTarget::HL),
                Target::Register(ArithmeticTarget::A),
            )),
            0x78 => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::A),
                Target::Register(ArithmeticTarget::B),
            )),
            0x79 => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::A),
                Target::Register(ArithmeticTarget::C),
            )),
            0x7A => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::A),
                Target::Register(ArithmeticTarget::D),
            )),
            0x7B => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::A),
                Target::Register(ArithmeticTarget::E),
            )),
            0x7C => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::A),
                Target::Register(ArithmeticTarget::H),
            )),
            0x7D => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::A),
                Target::Register(ArithmeticTarget::L),
            )),
            0x7E => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::A),
                Target::MemoryR16(DoubleTarget::HL),
            )),
            0x7F => Some(Instruction::LD(
                Target::Register(ArithmeticTarget::A),
                Target::Register(ArithmeticTarget::A),
            )),
            0x80 => Some(Instruction::ADD(
                Target::Register(ArithmeticTarget::A),
                Target::Register(ArithmeticTarget::B),
            )),
            0x81 => Some(Instruction::ADD(
                Target::Register(ArithmeticTarget::A),
                Target::Register(ArithmeticTarget::C),
            )),
            0x82 => Some(Instruction::ADD(
                Target::Register(ArithmeticTarget::A),
                Target::Register(ArithmeticTarget::D),
            )),
            0x83 => Some(Instruction::ADD(
                Target::Register(ArithmeticTarget::A),
                Target::Register(ArithmeticTarget::E),
            )),
            0x84 => Some(Instruction::ADD(
                Target::Register(ArithmeticTarget::A),
                Target::Register(ArithmeticTarget::H),
            )),
            0x85 => Some(Instruction::ADD(
                Target::Register(ArithmeticTarget::A),
                Target::Register(ArithmeticTarget::L),
            )),
            0x86 => Some(Instruction::ADD(
                Target::Register(ArithmeticTarget::A),
                Target::MemoryR16(DoubleTarget::HL),
            )),
            0x87 => Some(Instruction::ADD(
                Target::Register(ArithmeticTarget::A),
                Target::Register(ArithmeticTarget::A),
            )),
            0x88 => Some(Instruction::ADC(Target::Register(ArithmeticTarget::B))),
            0x89 => Some(Instruction::ADC(Target::Register(ArithmeticTarget::C))),
            0x8A => Some(Instruction::ADC(Target::Register(ArithmeticTarget::D))),
            0x8B => Some(Instruction::ADC(Target::Register(ArithmeticTarget::E))),
            0x8C => Some(Instruction::ADC(Target::Register(ArithmeticTarget::H))),
            0x8D => Some(Instruction::ADC(Target::Register(ArithmeticTarget::L))),
            0x8E => Some(Instruction::ADC(Target::MemoryR16(DoubleTarget::HL))),
            0x8F => Some(Instruction::ADC(Target::Register(ArithmeticTarget::A))),
            0x90 => Some(Instruction::SUB(Target::Register(ArithmeticTarget::B))),
            0x91 => Some(Instruction::SUB(Target::Register(ArithmeticTarget::C))),
            0x92 => Some(Instruction::SUB(Target::Register(ArithmeticTarget::D))),
            0x93 => Some(Instruction::SUB(Target::Register(ArithmeticTarget::E))),
            0x94 => Some(Instruction::SUB(Target::Register(ArithmeticTarget::H))),
            0x95 => Some(Instruction::SUB(Target::Register(ArithmeticTarget::L))),
            0x96 => Some(Instruction::SUB(Target::MemoryR16(DoubleTarget::HL))),
            0x97 => Some(Instruction::SUB(Target::Register(ArithmeticTarget::A))),
            0x98 => Some(Instruction::SBC(
                Target::Register(ArithmeticTarget::A),
                Target::Register(ArithmeticTarget::B),
            )),
            0x99 => Some(Instruction::SBC(
                Target::Register(ArithmeticTarget::A),
                Target::Register(ArithmeticTarget::C),
            )),
            0x9A => Some(Instruction::SBC(
                Target::Register(ArithmeticTarget::A),
                Target::Register(ArithmeticTarget::D),
            )),
            0x9B => Some(Instruction::SBC(
                Target::Register(ArithmeticTarget::A),
                Target::Register(ArithmeticTarget::E),
            )),
            0x9C => Some(Instruction::SBC(
                Target::Register(ArithmeticTarget::A),
                Target::Register(ArithmeticTarget::H),
            )),
            0x9D => Some(Instruction::SBC(
                Target::Register(ArithmeticTarget::A),
                Target::Register(ArithmeticTarget::L),
            )),
            0x9E => Some(Instruction::SBC(
                Target::Register(ArithmeticTarget::A),
                Target::MemoryR16(DoubleTarget::HL),
            )),
            0x9F => Some(Instruction::SBC(
                Target::Register(ArithmeticTarget::A),
                Target::Register(ArithmeticTarget::A),
            )),
            0xA0 => Some(Instruction::AND(
                Target::Register(ArithmeticTarget::A),
                Target::Register(ArithmeticTarget::B),
            )),
            0xA1 => Some(Instruction::AND(
                Target::Register(ArithmeticTarget::A),
                Target::Register(ArithmeticTarget::C),
            )),
            0xA2 => Some(Instruction::AND(
                Target::Register(ArithmeticTarget::A),
                Target::Register(ArithmeticTarget::D),
            )),
            0xA3 => Some(Instruction::AND(
                Target::Register(ArithmeticTarget::A),
                Target::Register(ArithmeticTarget::E),
            )),
            0xA4 => Some(Instruction::AND(
                Target::Register(ArithmeticTarget::A),
                Target::Register(ArithmeticTarget::H),
            )),
            0xA5 => Some(Instruction::AND(
                Target::Register(ArithmeticTarget::A),
                Target::Register(ArithmeticTarget::L),
            )),
            0xA6 => Some(Instruction::AND(
                Target::Register(ArithmeticTarget::A),
                Target::MemoryR16(DoubleTarget::HL),
            )),
            0xA7 => Some(Instruction::AND(
                Target::Register(ArithmeticTarget::A),
                Target::Register(ArithmeticTarget::A),
            )),
            0xA8 => Some(Instruction::XOR(
                Target::Register(ArithmeticTarget::A),
                Target::Register(ArithmeticTarget::B),
            )),
            0xA9 => Some(Instruction::XOR(
                Target::Register(ArithmeticTarget::A),
                Target::Register(ArithmeticTarget::C),
            )),
            0xAA => Some(Instruction::XOR(
                Target::Register(ArithmeticTarget::A),
                Target::Register(ArithmeticTarget::D),
            )),
            0xAB => Some(Instruction::XOR(
                Target::Register(ArithmeticTarget::A),
                Target::Register(ArithmeticTarget::E),
            )),
            0xAC => Some(Instruction::XOR(
                Target::Register(ArithmeticTarget::A),
                Target::Register(ArithmeticTarget::H),
            )),
            0xAD => Some(Instruction::XOR(
                Target::Register(ArithmeticTarget::A),
                Target::Register(ArithmeticTarget::L),
            )),
            0xAE => Some(Instruction::XOR(
                Target::Register(ArithmeticTarget::A),
                Target::MemoryR16(DoubleTarget::HL),
            )),
            0xAF => Some(Instruction::XOR(
                Target::Register(ArithmeticTarget::A),
                Target::Register(ArithmeticTarget::A),
            )),
            0xB0 => Some(Instruction::OR(
                Target::Register(ArithmeticTarget::A),
                Target::Register(ArithmeticTarget::B),
            )),
            0xB1 => Some(Instruction::OR(
                Target::Register(ArithmeticTarget::A),
                Target::Register(ArithmeticTarget::C),
            )),
            0xB2 => Some(Instruction::OR(
                Target::Register(ArithmeticTarget::A),
                Target::Register(ArithmeticTarget::D),
            )),
            0xB3 => Some(Instruction::OR(
                Target::Register(ArithmeticTarget::A),
                Target::Register(ArithmeticTarget::E),
            )),
            0xB4 => Some(Instruction::OR(
                Target::Register(ArithmeticTarget::A),
                Target::Register(ArithmeticTarget::H),
            )),
            0xB5 => Some(Instruction::OR(
                Target::Register(ArithmeticTarget::A),
                Target::Register(ArithmeticTarget::L),
            )),
            0xB6 => Some(Instruction::OR(
                Target::Register(ArithmeticTarget::A),
                Target::MemoryR16(DoubleTarget::HL),
            )),
            0xB7 => Some(Instruction::OR(
                Target::Register(ArithmeticTarget::A),
                Target::Register(ArithmeticTarget::A),
            )),
            0xB8 => Some(Instruction::CP(Target::Register(ArithmeticTarget::B))),
            0xB9 => Some(Instruction::CP(Target::Register(ArithmeticTarget::C))),
            0xBA => Some(Instruction::CP(Target::Register(ArithmeticTarget::D))),
            0xBB => Some(Instruction::CP(Target::Register(ArithmeticTarget::E))),
            0xBC => Some(Instruction::CP(Target::Register(ArithmeticTarget::H))),
            0xBD => Some(Instruction::CP(Target::Register(ArithmeticTarget::L))),
            0xBE => Some(Instruction::CP(Target::MemoryR16(DoubleTarget::HL))),
            0xBF => Some(Instruction::CP(Target::Register(ArithmeticTarget::A))),
            0xC0 => Some(Instruction::RET(JumpCondition::NotZero)),
            0xC1 => Some(Instruction::POP(Target::Register16(DoubleTarget::BC))),
            0xC2 => Some(Instruction::JP(JumpCondition::NotZero, 0)),
            0xC3 => Some(Instruction::JP(JumpCondition::Always, 0)),
            0xC4 => Some(Instruction::CALL(JumpCondition::NotZero, 0)),
            0xC5 => Some(Instruction::PUSH(Target::Register16(DoubleTarget::BC))),
            0xC6 => Some(Instruction::ADD(
                Target::Register(ArithmeticTarget::A),
                Target::Const8(),
            )),
            0xC7 => unimplemented!("RST instruction not implemented yet"),
            0xC8 => Some(Instruction::RET(JumpCondition::Zero)),
            0xC9 => Some(Instruction::RET(JumpCondition::Always)),
            0xCA => Some(Instruction::JP(JumpCondition::Zero, 0)),
            0xCB => panic!("No instruction to execute. Not reachable. Error this should be prefix instruction."),
            0xCC => Some(Instruction::CALL(JumpCondition::Zero, 0)),
            0xCD => Some(Instruction::CALL(JumpCondition::Always, 0)),
            0xCE => Some(Instruction::ADC(Target::Const8())),
            0xCF => unimplemented!("RST instruction not implemented yet"),
            0xD0 => Some(Instruction::RET(JumpCondition::NotCarry)),
            0xD1 => Some(Instruction::POP(Target::Register16(DoubleTarget::DE))),
            0xD2 => Some(Instruction::JP(JumpCondition::NotCarry, 0)),
            0xD3 => panic!("No instruction to execute. This byte is empty: {:#X}", byte),
            0xD4 => Some(Instruction::CALL(JumpCondition::NotCarry, 0)),
            0xD5 => Some(Instruction::PUSH(Target::Register16(DoubleTarget::DE))),
            0xD6 => Some(Instruction::SUB(Target::Const8())),
            0xD7 => unimplemented!("RST instruction not implemented yet"),
            0xD8 => Some(Instruction::RET(JumpCondition::Carry)),
            0xD9 => Some(Instruction::RETI(JumpCondition::Always)),
            0xDA => Some(Instruction::JP(JumpCondition::Carry, 0)),
            0xDB => panic!("No instruction to execute. This byte is empty: {:#X}", byte),
            0xDC => Some(Instruction::CALL(JumpCondition::Carry, 0)),
            0xDD => panic!("No instruction to execute. This byte is empty: {:#X}", byte),
            0xDE => Some(Instruction::SBC(Target::Register(ArithmeticTarget::A),Target::Const8())),
            0xDF => unimplemented!("RST instruction not implemented yet"),
            0xE0 => Some(Instruction::LDH(LDHRegister::C, LDHRegister::ArithmeticTarget)),
            0xE1 => Some(Instruction::POP(Target::Register16(DoubleTarget::HL))),
            0xE2 => Some(Instruction::LDH(LDHRegister::C, LDHRegister::ArithmeticTarget)),
            0xE3 => panic!("No instruction to execute. This byte is empty: {:#X}", byte),
            0xE4 => panic!("No instruction to execute. This byte is empty: {:#X}", byte),
            0xE5 => Some(Instruction::PUSH(Target::Register16(DoubleTarget::HL))),
            0xE6 => Some(Instruction::AND(Target::Register(ArithmeticTarget::A),Target::Const8())),
            0xE7 => unimplemented!("RST instruction not implemented yet"),
            0xE8 => Some(Instruction::ADD(Target::Register16(DoubleTarget::SP),Target::Const8())),
            0xE9 => Some(Instruction::JPHL(Target::Register16(DoubleTarget::HL))),
            0xEA => Some(Instruction::LD(Target::MemoryConst16(), Target::Register(ArithmeticTarget::A))),
            0xEB => panic!("No instruction to execute. This byte is empty: {:#X}", byte),
            0xEC => panic!("No instruction to execute. This byte is empty: {:#X}", byte),
            0xED => panic!("No instruction to execute. This byte is empty: {:#X}", byte),
            0xEE => Some(Instruction::XOR(Target::Register(ArithmeticTarget::A),Target::Const8())),
            0xEF => unimplemented!("RST instruction not implemented yet"),
            0xF0 => Some(Instruction::LDH(LDHRegister::ArithmeticTarget, LDHRegister::C)),
            0xF1 => Some(Instruction::POPAF()),
            0xF2 => Some(Instruction::LDH(LDHRegister::ArithmeticTarget, LDHRegister::C)),
            0xF3 => Some(Instruction::DI()),
            0xF4 => panic!("No instruction to execute. This byte is empty: {:#X}", byte),
            0xF5 => Some(Instruction::PUSHAF()),
            0xF6 => Some(Instruction::OR(Target::Register(ArithmeticTarget::A),Target::Const8())),
            0xF7 => unimplemented!("RST instruction not implemented yet"),
            0xF8 => Some(Instruction::LDHLSP()),
            0xF9 => Some(Instruction::LD(Target::Register16(DoubleTarget::SP),Target::Register16(DoubleTarget::HL))),
            0xFA => Some(Instruction::LD(Target::Register(ArithmeticTarget::A), Target::MemoryConst16())),
            0xFB => Some(Instruction::EI()),
            0xFC => panic!("No instruction to execute. This byte is empty: {:#X}", byte),
            0xFD => panic!("No instruction to execute. This byte is empty: {:#X}", byte),
            0xFE => Some(Instruction::CP(Target::Const8())),
            0xFF => unimplemented!("RST instruction not implemented yet"),
        }
    }

    pub fn from_byte(byte: u8, prefixed: bool) -> Option<Instruction> {
        if prefixed {
            return Instruction::from_prefixed_byte(byte);
        } else {
            return Instruction::match_byte(byte);
        }
    }
}
